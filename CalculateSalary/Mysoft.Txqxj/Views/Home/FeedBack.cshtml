
@model Mysoft.Tjqxj.Models.ViewModel.TestJsVm
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="Access-Control-Allow-Origin" content="api.map.baidu.com">
    <title>灾情反馈</title>
    <link href="http://res.wx.qq.com/open/libs/weui/1.1.2/weui.min.css" rel="stylesheet">
    <script src="http://res.wx.qq.com/open/js/jweixin-1.2.0.js"></script>
    <!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) -->
    <script src="https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js"></script>

</head>
<body>
    <div class="weui-panel weui-panel_access">
        @*位置*@
        <div class="weui-panel__bd">
            <div class="weui-media-box weui-media-box_text">
                <h4 class="weui-media-box__title">位置</h4>
                <p class="weui-media-box__desc" id="addressDetail">正在确定您的位置...</p>
            </div>
        </div>
        @*位置-end*@
        @*灾害类型*@
        <div class="weui-panel__bd">
            <div class="weui-media-box weui-media-box_text">
                <h4 class="weui-media-box__title">灾害类型</h4>
                <div class="weui-grids">
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/by.png" />
                        </div>
                        <p class="weui-grid__label">
                            暴雨
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/ld.png" />
                        </div>
                        <p class="weui-grid__label">
                            雷电
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/hl.png" />
                        </div>
                        <p class="weui-grid__label">
                            洪涝
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/gh.png" />
                        </div>
                        <p class="weui-grid__label">
                            干旱
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/bx.png" />
                        </div>
                        <p class="weui-grid__label">
                            暴雪
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/bb.png" />
                        </div>
                        <p class="weui-grid__label">
                            冰雹
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/dw.png" />
                        </div>
                        <p class="weui-grid__label">
                            大雾
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/gw.png" />
                        </div>
                        <p class="weui-grid__label">
                            高温
                        </p>
                    </a>
                    <a href="javascript:;" class="weui-grid">
                        <div class="weui-grid__icon">
                            <img src="~/tjqxj/images/df.png" />
                        </div>
                        <p class="weui-grid__label">
                            大风
                        </p>
                    </a>
                </div>
            </div>

        </div>
        @*灾害类型-end*@
        @*现场图片*@
        <div class="weui-panel__bd">
            <div class="weui-media-box weui-media-box_text">
                @*<h4 class="weui-media-box__title">现场图片</h4>*@
                <div class="weui-uploader">
                    <div class="weui-uploader__hd">
                        <p class="weui-uploader__title">现场图片</p>
                        <div class="weui-uploader__info">0/2</div>
                    </div>
                    <div class="weui-uploader__bd">
                        <ul class="weui-uploader__files" id="uploaderFiles"></ul>
                        <div class="weui-uploader__input-box">
                            <input id="uploaderInput" class="weui-uploader__input" type="file" accept="image/*" multiple="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*现场图片-end*@

        @*用户备注*@
        <div class="weui-panel__bd">
            <div class="weui-media-box weui-media-box_text">
                <h4 class="weui-media-box__title">其它信息</h4>
                <div class="weui-cells weui-cells_form">
                    <div class="weui-cell">
                        <div class="weui-cell__bd">
                            <textarea class="weui-textarea" placeholder="请输入文本" rows="3"></textarea>
                            <div class="weui-textarea-counter"><span>0</span>/200</div>
                        </div>
                    </div>
                </div>
                <a class="weui-btn weui-btn_primary" onclick="UpladFile()">提交</a>
                <progress id="progressBar" value="0" max="100" style="width: 300px;"></progress>
                <span id="percentage"></span><span id="time"></span>
                <br /><br />
            </div>

        </div>
        @*用户备注-end*@


    </div>
</body>

</html>
<script type="text/javascript">
    /*
    三个参数
    file：一个是文件(类型是图片格式)，
    w：一个是文件压缩的后宽度，宽度越小，字节越小
    objDiv：一个是容器或者回调函数
    photoCompress()
     */
    function photoCompress(file, w, objDiv) {
        var ready = new FileReader();
        /*开始读取指定的Blob对象或File对象中的内容. 当读取操作完成时,readyState属性的值会成为DONE,如果设置了onloadend事件处理程序,则调用之.同时,result属性中将包含一个data: URL格式的字符串以表示所读取文件的内容.*/
        ready.readAsDataURL(file);
        ready.onload = function () {
            var re = this.result;
            canvasDataURL(re, w, objDiv);
        }
    }
    function canvasDataURL(path, obj, callback) {
        var img = new Image();
        img.src = path;
        img.onload = function () {
            var that = this;
            // 默认按比例压缩
            var w = that.width,
                h = that.height,
                scale = w / h;
            w = obj.width || w;
            h = obj.height || (w / scale);
            var quality = 0.7;  // 默认图片质量为0.7
            //生成canvas
            var canvas = document.createElement('canvas');
            var ctx = canvas.getContext('2d');
            // 创建属性节点
            var anw = document.createAttribute("width");
            anw.nodeValue = w;
            var anh = document.createAttribute("height");
            anh.nodeValue = h;
            canvas.setAttributeNode(anw);
            canvas.setAttributeNode(anh);
            ctx.drawImage(that, 0, 0, w, h);
            // 图像质量
            if (obj.quality && obj.quality <= 1 && obj.quality > 0) {
                quality = obj.quality;
            }
            // quality值越小，所绘制出的图像越模糊
            var base64 = canvas.toDataURL('image/jpeg', quality);
            // 回调函数返回base64的值
            callback(base64);
        }
    }
    /**
     * 将以base64的图片url数据转换为Blob
     */
    function convertBase64UrlToBlob(urlData) {
        var arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
        while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
        }
        return new Blob([u8arr], { type: mime });
    }

    var xhr;
    //上传文件方法
    function UpladFile() {

        var tmpl = '<div class="weui-uploader__file-content">50%</div>';
        $(".weui-uploader__file").append($(tmpl));

        var fileObj = document.getElementById("uploaderInput").files[0]; // js 获取文件对象
        var url = "/tjqxj/home/upload"; // 接收上传文件的后台地址

        var form = new FormData(); // FormData 对象

        if (fileObj.size / 1024 > 1025) { //大于1M，进行压缩上传
            photoCompress(fileObj, {
                quality: 0.2
            }, function (base64Codes) {
                //console.log("压缩后：" + base.length / 1024 + " " + base);
                var bl = convertBase64UrlToBlob(base64Codes);
                form.append("file", bl, "file_" + Date.parse(new Date()) + ".jpg"); // 文件对象
                xhr = new XMLHttpRequest();  // XMLHttpRequest 对象
                xhr.open("post", url, true); //post方式，url为服务器请求地址，true 该参数规定请求是否异步处理。
                xhr.onload = uploadComplete; //请求完成
                xhr.onerror = uploadFailed; //请求失败

                xhr.upload.onprogress = progressFunction;//【上传进度调用方法实现】
                xhr.upload.onloadstart = function () {//上传开始执行方法
                    ot = new Date().getTime();   //设置上传开始时间
                    oloaded = 0;//设置上传开始时，以上传的文件大小为0
                };

                xhr.send(form); //开始上传，发送form数据
            });
        } else { //小于等于1M 原图上传
            form.append("file", fileObj); // 文件对象
            form.append("json", '{"key1":"tedst"}');
            xhr = new XMLHttpRequest();  // XMLHttpRequest 对象
            xhr.open("post", url, true); //post方式，url为服务器请求地址，true 该参数规定请求是否异步处理。
            xhr.onload = uploadComplete; //请求完成
            xhr.onerror = uploadFailed; //请求失败

            xhr.upload.onprogress = progressFunction;//【上传进度调用方法实现】
            xhr.upload.onloadstart = function () {//上传开始执行方法
                ot = new Date().getTime();   //设置上传开始时间
                oloaded = 0;//设置上传开始时，以上传的文件大小为0
            };

            xhr.send(form); //开始上传，发送form数据
        }
    }

    //上传成功响应
    function uploadComplete(evt) {
        //服务断接收完文件返回的结果

        var data = JSON.parse(evt.target.responseText);
        if (data.State == "0") {
            alert("上传成功！");
        } else {
            alert("上传失败！");
        }

    }
    //上传失败
    function uploadFailed(evt) {
        alert("上传失败！");
    }
    //取消上传
    function cancleUploadFile() {
        xhr.abort();
    }

    //上传进度实现方法，上传过程中会频繁调用该方法
    function progressFunction(evt) {
        $(".weui-uploader__file-content").html("10");

        var progressBar = document.getElementById("progressBar");
        var percentageDiv = document.getElementById("percentage");
        // event.total是需要传输的总字节，event.loaded是已经传输的字节。如果event.lengthComputable不为真，则event.total等于0
        if (evt.lengthComputable) {//
            progressBar.max = evt.total;
            progressBar.value = evt.loaded;
            percentageDiv.innerHTML = Math.round(evt.loaded / evt.total * 100) + "%";
        }
        var time = document.getElementById("time");
        var nt = new Date().getTime();//获取当前时间
        var pertime = (nt - ot) / 1000; //计算出上次调用该方法时到现在的时间差，单位为s
        ot = new Date().getTime(); //重新赋值时间，用于下次计算
        var perload = evt.loaded - oloaded; //计算该分段上传的文件大小，单位b
        oloaded = evt.loaded;//重新赋值已上传文件大小，用以下次计算
        //上传速度计算
        var speed = perload / pertime;//单位b/s
        var bspeed = speed;
        var units = 'b/s';//单位名称
        if (speed / 1024 > 1) {
            speed = speed / 1024;
            units = 'k/s';
        }
        if (speed / 1024 > 1) {
            speed = speed / 1024;
            units = 'M/s';
        }
        speed = speed.toFixed(1);
        //剩余时间
        var resttime = ((evt.total - evt.loaded) / bspeed).toFixed(1);
        time.innerHTML = '，速度：' + speed + units + '，剩余时间：' + resttime + 's';
        if (bspeed == 0) time.innerHTML = '上传已取消';
    }
</script>
<script>


    //提交所有信息
    function Submit1() {
        var files = $('#uploaderInput').prop('files');

        var data = new FormData();
        data.append('uploaderInput', files[0]);

        $.ajax({
            url: '/tjqxj/home/upload',
            type: 'POST',
            data: data,
            cache: false,
            processData: false,
            contentType: false
        });
    }

    //动态添加缩略图
    $(function () {
        var tmpl = '<li class="weui-uploader__file weui-uploader__file_status" style="background-image:url(#url#)"></li>',
            $gallery = $("#gallery"), $galleryImg = $("#galleryImg"),
            $uploaderInput = $("#uploaderInput"),
            $uploaderFiles = $("#uploaderFiles")
            ;

        $uploaderInput.on("change", function (e) {
            var src, url = window.URL || window.webkitURL || window.mozURL, files = e.target.files;
            for (var i = 0, len = files.length; i < len; ++i) {
                var file = files[i];

                if (url) {
                    src = url.createObjectURL(file);
                } else {
                    src = e.target.result;
                }

                $uploaderFiles.append($(tmpl.replace('#url#', src)));
            }
        });
        $uploaderFiles.on("click", "li", function () {
            $galleryImg.attr("style", this.getAttribute("style"));
            $gallery.fadeIn(100);
        });
        $gallery.on("click", function () {
            $gallery.fadeOut(100);
        });
    });

    //获取地理位置
    function getLocation() {
        wx.getLocation({
            type: 'wgs84', // 默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'
            success: function (res) {
                console.debug(res.latitude);
                baiduLocation(res.longitude, res.latitude);
            }
        });
    }

    //根据经纬度去百度获取详细位置
    function baiduLocation(longitude, latitude) {
        var url =
            'http://api.map.baidu.com/geocoder/v2/?callback=renderReverse&location=' + latitude + ',' + longitude +'&output=json&pois=1&ak=ZKLhoXcO2o1DvaKLa9CqpTBoj7S8Ygnb';
        $.ajax(url,
            {
                dataType: 'jsonp',
                crossDomain: true,
                success: function (data) {
                    if (data.status == '0') {
                        $("#addressDetail").html(data.result.formatted_address);
                        return;
                    }
                    $("#addressDetail").html("定位失败，请重试...");
                }
            });
    };

    //选择图片
    function ChoosePic() {
        wx.chooseImage({
            count: 9, // 默认9
            sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有
            sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
            success: function (res) {
                var localIds = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
                alert("选择图片信息：" + localIds);
            }
        });
    }

    //预览图片
    function previewImage() {
        wx.previewImage({
            current: 'http://mmbiz.qpic.cn/mmbiz/PiajxSqBRaEIQxibpLbyuSK8jCzLMb60WcfOX33TZvbkAWicYGGlWGlp8nov2jOIykS7jgTmcmr9sNKibavvsVRMzw/0?wx_fmt=jpeg', // 当前显示图片的http链接
            urls: ['http://mmbiz.qpic.cn/mmbiz/PiajxSqBRaEIQxibpLbyuSK8jCzLMb60WcfOX33TZvbkAWicYGGlWGlp8nov2jOIykS7jgTmcmr9sNKibavvsVRMzw/0?wx_fmt=jpeg','http://mmbiz.qpic.cn/mmbiz/PiajxSqBRaEIQxibpLbyuSK8jCzLMb60WcfOX33TZvbkAWicYGGlWGlp8nov2jOIykS7jgTmcmr9sNKibavvsVRMzw/0?wx_fmt=jpeg'] // 需要预览的图片http链接列表
        });
    }

    $(function() {
        console.debug("加载成功");
        wx.config({
            debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
            appId: '@Model.AppId', // 必填，公众号的唯一标识
            timestamp: @Model.TimeStamp, // 必填，生成签名的时间戳
            nonceStr: '@Model.NonceStr', // 必填，生成签名的随机串
            signature: '@Model.Signature', // 必填，签名
            jsApiList: ['getLocation', 'chooseImage','previewImage'] // 必填，需要使用的JS接口列表
        });
        wx.ready(function() {
            console.debug("执行ready");
            getLocation();//获取用户位置
            // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
        });
        wx.error(function(res) {
            console.debug("执行error");
            // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
        });

    });
</script>
